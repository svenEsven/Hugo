[{"content":"Setting Up a Hugo Blog with the PaperMod Theme: A Step-by-Step Guide Introduction In this tutorial, we\u0026rsquo;ll walk you through setting up a Hugo blog using the PaperMod theme. We\u0026rsquo;ll cover everything from installing Hugo and the theme to customizing your site with high-quality images and ensuring uniform thumbnail sizes for a polished look.\nPrerequisites Before we begin, make sure you have the following installed on your system:\nHugo Git Step 1: Create a New Hugo Site First, create a new Hugo site by running the following command in your terminal:\nhugo new site my-blog Navigate to the newly created directory:\ncd my-blog Step 2: Install the PaperMod Theme Clone the PaperMod theme into the themes directory:\ngit submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod Copy the example site configuration to your site’s root directory:\ncp -r themes/PaperMod/exampleSite/* . Step 3: Configure the Theme Open the config.toml file and set the theme to PaperMod:\ntheme = \u0026#34;PaperMod\u0026#34; Customize the configuration as needed, such as setting your site title, base URL, and other settings.\nStep 4: Add a Blog Post Create a new blog post using the following command:\nhugo new posts/setting-up-traefik-in-portainer.md Open the newly created file in your editor and add your content. Here’s an example front matter and content:\n--- layout: post title: \u0026#34;Setting Up Traefik in Portainer: A Step-by-Step Guide\u0026#34; date: 2023-10-04 tags: [\u0026#34;traefik\u0026#34;, \u0026#34;portainer\u0026#34;, \u0026#34;docker\u0026#34;] author: \u0026#34;Me\u0026#34; showToc: true TocOpen: false draft: false description: \u0026#34;An Idiot\u0026#39;s Reverse-Proxy\u0026#34; cover: image: \u0026#34;https://blog.mushdragon.com/content/images/2021/08/traefik-logo.jpg\u0026#34; alt: \u0026#34;Traefik Logo\u0026#34; caption: \u0026#34;Setting Up Traefik in Portainer\u0026#34; relative: false hidden: false --- In my quest for an efficient containerized environment, I came across Traefik, a dynamic reverse proxy built for the modern era. Configuring Traefik in Docker using Portainer streamlines the process and provides a robust interface to manage and monitor the service. Let\u0026#39;s delve into the setup process. ## Traefik: The Cloud Native Edge Router **What is Traefik?** Traefik is a dynamic reverse proxy, often used in container environments to route traffic to different services based on request information. It handles tasks like SSL certificate generation and integrates seamlessly with Docker, making it an excellent choice for modern container setups. Step 5: Add High-Quality Images to make your blogpost more visually appealing, add high-quality images. Ensure each post has a cover image and a thumbnail for the pagination list.\nExample Cover Image Add the following to the front matter of yuour blog post:\ncover: image: \u0026#34;https://blog.mushdragon.com/content/images/2021/08/traefik-logo.jpg\u0026#34; alt: \u0026#34;Traefik Logo\u0026#34; caption: \u0026#34;Setting Up Traefik in Portainer\u0026#34; relative: false hidden: false Step 6: Ensure Uniform Thumbnail Sizes To ensure that all thumbnails in your pagination section are uniform in size, add the following CSS to your theme\u0026rsquo;s CSS file\nLocate the CSS File In the PaperMod Theme, the CSS file is tyupically located in the assets or static directory, for example assets/css/style.css\nAdd the CSS File Open the CSS file and add the following rules:\n.thumbnail { width: 200px; /* Set the desired width */ height: 150px; /* Set the desired height */ object-fit: cover; /* Ensures the image covers the entire area */ border-radius: 8px; /* Optional: Adds rounded corners */ margin-bottom: 10px; /* Optional: Adds space below the image */ } Update the Template Ensure the HTML template for the pagination section includes the thumbnail class for the images. Update the list.html template in your Hugo theme:\n{{ range .Paginator.Pages }} \u0026lt;article\u0026gt; \u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;{{ .Params.cover.image }}\u0026#34; alt=\u0026#34;{{ .Params.cover.alt }}\u0026#34; class=\u0026#34;thumbnail\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;{{ .Title }}\u0026lt;/h2\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;p\u0026gt;{{ .Summary }}\u0026lt;/p\u0026gt; \u0026lt;/article\u0026gt; {{ end }} Step 7: Build and Serve your Site Finally, build ansd serve your site locally to see the changes:\nhugo server Open your prowser and navigate to http://localhost:1313 to view your site.\nConclusion By following these steps, you\u0026rsquo;ve set up a Hugo blog with the PaperMod theme, added high-wuality images, and ensured uniform thumbnail sizes for a polished look. Happy blogging.\n","href":"https://blog.svendrive.com/posts/2024-10-12-setting-up-hugo/","summary":"\u003ch1 id=\"setting-up-a-hugo-blog-with-the-papermod-theme-a-step-by-step-guide\"\u003eSetting Up a Hugo Blog with the PaperMod Theme: A Step-by-Step Guide\u003c/h1\u003e\n\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this tutorial, we\u0026rsquo;ll walk you through setting up a Hugo blog using the PaperMod theme. We\u0026rsquo;ll cover everything from installing Hugo and the theme to customizing your site with high-quality images and ensuring uniform thumbnail sizes for a polished look.\u003c/p\u003e\n\u003ch2 id=\"prerequisites\"\u003ePrerequisites\u003c/h2\u003e\n\u003cp\u003eBefore we begin, make sure you have the following installed on your system:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://gohugo.io/getting-started/installing/\"\u003eHugo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/\"\u003eGit\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"step-1-create-a-new-hugo-site\"\u003eStep 1: Create a New Hugo Site\u003c/h2\u003e\n\u003cp\u003eFirst, create a new Hugo site by running the following command in your terminal:\u003c/p\u003e","title":"Setting Up a Hugo Blog with the PaperMod Theme: A Step-by-Step Guide"},{"content":"Keeping Docker containers updated can be a repetitive task. Enter Watchtower—a tool designed to automate this process. This article details the steps to deploy and configure Watchtower.\nWatchtower: Seamless Docker Container Updates What is Watchtower?\nWatchtower auto-updates running Docker containers when new images are available, pulling new versions and restarting the necessary containers.\nWhy Install Watchtower?\nAutomation: Say goodbye to the manual process of updating containers. Peace of Mind: Rest assured that you\u0026rsquo;re always running the latest security patches and software releases. Easy Rollbacks: Revert to a previous image if an update introduces issues. Setting Up Watchtower: Run the Watchtower container:\nAdjusting Watchtower\u0026rsquo;s Update Interval: By default, Watchtower checks for updates every 5 minutes. To modify this interval:\nThis example sets the interval to 12 hours. Adjust the `43200\n","href":"https://blog.svendrive.com/posts/2023-10-21-setting-up-watchtower/","summary":"\u003cp\u003eKeeping Docker containers updated can be a repetitive task. Enter Watchtower—a tool designed to automate this process. This article details the steps to deploy and configure Watchtower.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"watchtower-seamless-docker-container-updates\"\u003eWatchtower: Seamless Docker Container Updates\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eWhat is Watchtower?\u003c/strong\u003e\u003cbr\u003e\nWatchtower auto-updates running Docker containers when new images are available, pulling new versions and restarting the necessary containers.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003e\u003cstrong\u003eWhy Install Watchtower?\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAutomation\u003c/strong\u003e: Say goodbye to the manual process of updating containers.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePeace of Mind\u003c/strong\u003e: Rest assured that you\u0026rsquo;re always running the latest security patches and software releases.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEasy Rollbacks\u003c/strong\u003e: Revert to a previous image if an update introduces issues.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch3 id=\"setting-up-watchtower\"\u003eSetting Up Watchtower:\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eRun the Watchtower container\u003c/strong\u003e:\u003c/p\u003e","title":"Setting Up Watchtower"},{"content":"In my quest to create an efficient and streamlined media server, I delved deep into several tools that make the process seamless. Today, I\u0026rsquo;m introducing you to four cornerstone applications I use: Sonarr, Radarr, Sabnzbd, and qBittorrent. Let\u0026rsquo;s jump in and see how they transformed my media management experience.\nSonarr: Automating TV Show Downloads What is Sonarr?\nSonarr is a TV series management tool which can track and automate your TV show downloads. It integrates seamlessly with various clients and services and ensures that your media library is always up to date.\nKey Features of Sonarr:\nAutomatic Searching: Find new episodes as soon as they\u0026rsquo;re released. Integration: Works hand in hand with torrent and NZB downloaders. Library Organization: Sort and rename episodes according to your preferences. Setting Up Sonarr: version: \u0026#39;3\u0026#39; services: sonarr: image: linuxserver/sonarr Radarr: Automating Movie Downloads What is Radarr?\nSimilar to Sonarr but for movies, Radarr can automatically search for movies available in your library or on your watchlist and fetch them as soon as they\u0026rsquo;re available.\nKey Features of Radarr:\nIntuitive UI: Easily manage and organize your movie library. Flexibility: Choose the quality, file size, and formats you prefer. Integration: Seamless integration with download clients. Setting Up Radarr: version: \u0026#39;3\u0026#39; services: radarr: image: linuxserver/radarr Sabnzbd: Binary Newsreader What is Sabnzbd?\nSabnzbd is an Open Source Binary Newsreader, designed to download and process NZB files from Usenet.\nKey Features of Sabnzbd:\nWeb Interface: Monitor and manage your downloads remotely. Performance: Designed to consume minimal CPU and memory resources. Integration: Works perfectly with applications like Sonarr and Radarr. Setting Up Sabnzbd: version: \u0026#39;3\u0026#39; services: sabnzbd: image: linuxserver/sabnzbd qBittorrent: Torrent Download Client What is qBittorrent?\nqBittorrent is a versatile torrent client with a clean UI and a host of features, making torrent management a breeze.\nKey Features of qBittorrent:\nNo Ads: A clean, ad-free experience. Advanced Controls: Comprehensive settings and controls for advanced users. Remote Control: A built-in web interface for remote access. Setting Up qBittorrent: version: \u0026#39;3\u0026#39; services: qbittorrent: image: linuxserver/qbittorrent Together, Sonarr, Radarr, Sabnzbd, and qBittorrent have revolutionized my media server setup. Each tool has its unique strengths, and in combination, they provide a media management ecosystem that is hard to beat. If you\u0026rsquo;re passionate about building an efficient media server, I can\u0026rsquo;t recommend these tools enough!\n","href":"https://blog.svendrive.com/posts/2023-10-20-setting-up-media-server-sonarr-radarr-sabnzbd-qbittorrent/","summary":"\u003cp\u003eIn my quest to create an efficient and streamlined media server, I delved deep into several tools that make the process seamless. Today, I\u0026rsquo;m introducing you to four cornerstone applications I use: Sonarr, Radarr, Sabnzbd, and qBittorrent. Let\u0026rsquo;s jump in and see how they transformed my media management experience.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"sonarr-automating-tv-show-downloads\"\u003eSonarr: Automating TV Show Downloads\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eWhat is Sonarr?\u003c/strong\u003e\u003cbr\u003e\nSonarr is a TV series management tool which can track and automate your TV show downloads. It integrates seamlessly with various clients and services and ensures that your media library is always up to date.\u003c/p\u003e","title":"Setting Up a Media Server: Sonarr, Radarr, Sabnzbd, and qBittorrent"},{"content":"In my quest for an efficient containerized environment, I came across Traefik, a dynamic reverse proxy built for the modern era. Configuring Traefik in Docker using Portainer streamlines the process and provides a robust interface to manage and monitor the service. Let\u0026rsquo;s delve into the setup process.\nTraefik: The Cloud Native Edge Router What is Traefik?\nTraefik is a dynamic reverse proxy, often used in container environments to route traffic to different services based on request information. It handles tasks like SSL certificate generation and integrates seamlessly with Docker, making it an excellent choice for modern container setups.\nWhy Use Traefik with Docker?\nDynamic Configuration: It automatically detects changes in your Docker environment. Let\u0026rsquo;s Encrypt Integration: Traefik handles SSL/TLS certificate generation and renewal for your domains. Simplicity: With Docker, setting up Traefik is a breeze. Especially when managed with a tool like Portainer. Powerful Dashboard: Monitor your routing configurations, active connections, and more. Setting Up Traefik in Portainer using Docker Compose: Prepare Your Environment:\nEnsure you have Portainer up and running. Make sure you own a domain and have access to modify its DNS settings. Create a Docker Compose file: Create a new docker-compose.yml file for Traefik with the following content:\nversion: \u0026lsquo;3\u0026rsquo;\nservices: traefik: image: \u0026ldquo;traefik:v2.3\u0026rdquo; ports: - \u0026ldquo;80:80\u0026rdquo; - \u0026ldquo;443:443\u0026rdquo; - \u0026ldquo;8080:8080\u0026rdquo; volumes: - /var/run/docker.sock:/var/run/docker.sock labels: \u0026hellip; Upload and Deploy via Portainer:\nNavigate to your Portainer instance. Create a new stack, copy-paste the content of the docker-compose.yml, and deploy. Access the Traefik Dashboard: Navigate to http://\u0026lt;YOUR-IP-ADDRESS\u0026gt;:8080.\nHandling HTTPS with Traefik: To enable HTTPS, you\u0026rsquo;ll want to expand the Traefik configuration to include Let\u0026rsquo;s Encrypt integration. This can be a topic on its own due to its intricacies, but Traefik\u0026rsquo;s documentation is an excellent resource for diving deeper.\nTraefik has proven to be an invaluable tool in my containerized setups. With Portainer\u0026rsquo;s interface, managing and monitoring Traefik becomes a seamless experience. If you\u0026rsquo;re looking to optimize your Docker environment, integrating Traefik is a must!\n","href":"https://blog.svendrive.com/posts/2023-10-05-setting-up-traefik-in-portainer/","summary":"\u003cp\u003eIn my quest for an efficient containerized environment, I came across Traefik, a dynamic reverse proxy built for the modern era. Configuring Traefik in Docker using Portainer streamlines the process and provides a robust interface to manage and monitor the service. Let\u0026rsquo;s delve into the setup process.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"traefik-the-cloud-native-edge-router\"\u003eTraefik: The Cloud Native Edge Router\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eWhat is Traefik?\u003c/strong\u003e\u003cbr\u003e\nTraefik is a dynamic reverse proxy, often used in container environments to route traffic to different services based on request information. It handles tasks like SSL certificate generation and integrates seamlessly with Docker, making it an excellent choice for modern container setups.\u003c/p\u003e","title":"Setting Up Traefik in Portainer: A Step-by-Step Guide"},{"content":"About Me I am passionate about IT and server management. Here are my skills and aspirations:\nSkill 1 Skill 2 Skill 3 My aspirations include becoming an expert in homelab setups and sharing my knowledge with the community.\n","href":"https://blog.svendrive.com/about/","summary":"\u003ch2 id=\"about-me\"\u003eAbout Me\u003c/h2\u003e\n\u003cp\u003eI am passionate about IT and server management. Here are my skills and aspirations:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSkill 1\u003c/li\u003e\n\u003cli\u003eSkill 2\u003c/li\u003e\n\u003cli\u003eSkill 3\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMy aspirations include becoming an expert in homelab setups and sharing my knowledge with the community.\u003c/p\u003e","title":"About Me"},{"content":"Learning Resources ","href":"https://blog.svendrive.com/learning/","summary":"\u003ch2 id=\"learning-resources\"\u003eLearning Resources\u003c/h2\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Learning"},{"content":"Generate SSH Key Pair ssh-keygen -C \u0026#34;zhaohuabing@gmail.com\u0026#34; Shadowsocks Install shadowsokcs\nsudo apt-get install python3-pip sudo pip3 install shadowsocks Create config at config/shadowsocks.json, with the following content:\n{ \u0026#34;server\u0026#34;:\u0026#34;remote-shadowsocks-server-ip-addr\u0026#34;, \u0026#34;server_port\u0026#34;:443, \u0026#34;local_address\u0026#34;:\u0026#34;127.0.0.1\u0026#34;, \u0026#34;local_port\u0026#34;:1080, \u0026#34;password\u0026#34;:\u0026#34;your-passwd\u0026#34;, \u0026#34;timeout\u0026#34;:300, \u0026#34;method\u0026#34;:\u0026#34;aes-256-cfb\u0026#34;, \u0026#34;fast_open\u0026#34;:false, \u0026#34;workers\u0026#34;:1 } Start a local socks proxy\nsudo sslocal -c config/shadowsocks.json -d start In case there is an openssl error, modify shadowsocks source file.\nsudo vi /usr/local/lib/python3.6/dist-packages/shadowsocks/crypto/openssl.py :%s/cleanup/reset/gc Convert shadowsocks socks proxy to http proxy\nsudo apt-get install polipo echo \u0026#34;socksParentProxy = localhost:1080\u0026#34; | sudo tee -a /etc/polipo/config sudo service polipo restart Http proxy now is available at port 8123\nSet bing wallpaper as desktop background sudo add-apt-repository ppa:whizzzkid/bingwallpaper sudo apt-get update sudo apt-get install bingwallpaper Use vim mode in bash echo \u0026#39;set -o vi\u0026#39;\u0026gt;\u0026gt; ~/.bashrc ","href":"https://blog.svendrive.com/posts/2018-05-24-set_up_my_ubuntu_desktop/","summary":"\u003ch2 id=\"generate-ssh-key-pair\"\u003eGenerate SSH Key Pair\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003essh-keygen -C \u0026#34;zhaohuabing@gmail.com\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"shadowsocks\"\u003eShadowsocks\u003c/h2\u003e\n\u003cp\u003eInstall shadowsokcs\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esudo apt-get install python3-pip\n\nsudo pip3 install shadowsocks\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eCreate config at \u003ccode\u003econfig/shadowsocks.json\u003c/code\u003e, with the following content:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{\n\t\u0026#34;server\u0026#34;:\u0026#34;remote-shadowsocks-server-ip-addr\u0026#34;,\n\t\u0026#34;server_port\u0026#34;:443,\n\t\u0026#34;local_address\u0026#34;:\u0026#34;127.0.0.1\u0026#34;,\n\t\u0026#34;local_port\u0026#34;:1080,\n\t\u0026#34;password\u0026#34;:\u0026#34;your-passwd\u0026#34;,\n\t\u0026#34;timeout\u0026#34;:300,\n\t\u0026#34;method\u0026#34;:\u0026#34;aes-256-cfb\u0026#34;,\n\t\u0026#34;fast_open\u0026#34;:false,\n\t\u0026#34;workers\u0026#34;:1\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eStart a local socks proxy\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esudo sslocal -c config/shadowsocks.json -d start\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn case there is an openssl error, modify shadowsocks source file.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esudo vi /usr/local/lib/python3.6/dist-packages/shadowsocks/crypto/openssl.py \n\n:%s/cleanup/reset/gc\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eConvert shadowsocks socks proxy to http proxy\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esudo apt-get install polipo\n\necho \u0026#34;socksParentProxy = localhost:1080\u0026#34; | sudo tee -a /etc/polipo/config \nsudo service polipo restart\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHttp proxy now is available at port 8123\u003c/p\u003e","title":"Everything about Setting Up My Ubuntu Desktop"},{"content":" Introduction Docker is a platform used to develop, ship, and run applications inside containers. Running an application inside a container makes it portable and consistent across multiple environments. In this tutorial, we\u0026rsquo;ll guide you through the process of installing Docker on an Ubuntu server.\nPrerequisites An Ubuntu server (18.04 or 20.04) A user account with sudo privileges Step-by-Step Installation 1. Update Your System First, ensure your package manager is updated:\nInstall Required Packages Docker requires additional packages to work with the apt package manager over HTTPS: Add Docker’s GPG Key Fetch and add Docker\u0026rsquo;s official GPG key: Add Docker Repository Next, you need to add Docker\u0026rsquo;s APT repository to your system: Install Docker Now, you can install Docker: Verify Docker Installation To ensure Docker is installed and running: You should see an output indicating that the Docker service is active and running.\nConclusion Congratulations, you\u0026rsquo;ve successfully installed Docker on your Ubuntu server! You can now begin to containerize your applications and take advantage of the benefits Docker offers.\nRemember to check the official Docker documentation for more detailed information and advanced configurations.\n","href":"https://blog.svendrive.com/posts/2023-09-28-installing-docker-on-ubuntu/","summary":"\u003cblockquote\u003e\n\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eDocker is a platform used to develop, ship, and run applications inside containers. Running an application inside a container makes it portable and consistent across multiple environments. In this tutorial, we\u0026rsquo;ll guide you through the process of installing Docker on an Ubuntu server.\u003c/p\u003e\n\u003ch2 id=\"prerequisites\"\u003ePrerequisites\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eAn Ubuntu server (18.04 or 20.04)\u003c/li\u003e\n\u003cli\u003eA user account with \u003ccode\u003esudo\u003c/code\u003e privileges\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"step-by-step-installation\"\u003eStep-by-Step Installation\u003c/h2\u003e\n\u003ch3 id=\"1-update-your-system\"\u003e1. Update Your System\u003c/h3\u003e\n\u003cp\u003eFirst, ensure your package manager is updated:\u003c/p\u003e","title":"Installing Docker on Ubuntu Server"},{"content":"Proxmox Virtual Environment (PVE) is an open-source server virtualization management solution. Here\u0026rsquo;s a step-by-step guide to installing Proxmox 8:\nStep-by-Step Guide to Installing Proxmox 8 Download the Proxmox VE ISO\nHead over to the official Proxmox website and download the Proxmox VE ISO image suitable for your system. Prepare a Bootable USB or DVD: Use software like Etcher or Rufus to create a bootable medium from the downloaded ISO file.\nBoot from the Installation Medium: Insert the USB or DVD into the server where you intend to install Proxmox and boot from it.\nStart the Proxmox Installation Wizard: Once booted, you\u0026rsquo;ll be greeted with the Proxmox installation wizard. Accept the terms and conditions to proceed.\nChoose the Installation Disk: Select the target hard drive on which Proxmox VE will be installed.\nConfigure Regional Settings: Enter details like country, time zone, and keyboard layout.\nSet Administrative Password: Provide a strong password for the \u0026lsquo;root\u0026rsquo; administrative account. This will be used to access the Proxmox web interface.\nNetwork Configuration: Input the IP address, netmask, gateway, and DNS server information. Assigning a static IP to your Proxmox server is recommended.\nInstallation: The installer will now set up Proxmox. This step might take several minutes.\nReboot: After installation, eject the installation medium and reboot your server.\nAccess the Proxmox Web Interface: On a different machine, open a web browser and navigate to https://YOUR_SERVER_IP:8006. Replace YOUR_SERVER_IP with the IP address you assigned to your Proxmox server.\nInitial Configuration: The first time you log in, you might be asked about a Proxmox subscription. You can use Proxmox without a subscription, but certain enterprise features may be unavailable.\nStart Creating VMs and Containers: With Proxmox installed and set up, you\u0026rsquo;re now ready to dive into creating virtual machines and containers!\nRemember to always back up your configurations and regularly check Proxmox\u0026rsquo;s official documentation for additional details and troubleshooting tips.\nHappy virtualizing!\n","href":"https://blog.svendrive.com/posts/2023-09-25-installing-proxmox-8/","summary":"\u003cp\u003eProxmox Virtual Environment (PVE) is an open-source server virtualization management solution. Here\u0026rsquo;s a step-by-step guide to installing Proxmox 8:\u003c/p\u003e\n\u003ch2 id=\"step-by-step-guide-to-installing-proxmox-8\"\u003eStep-by-Step Guide to Installing Proxmox 8\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDownload the Proxmox VE ISO\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHead over to the \u003ca href=\"https://www.proxmox.com/en/downloads\"\u003eofficial Proxmox website\u003c/a\u003e and download the Proxmox VE ISO image suitable for your system.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003ePrepare a Bootable USB or DVD\u003c/strong\u003e: Use software like Etcher or Rufus to create a bootable medium from the downloaded ISO file.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eBoot from the Installation Medium\u003c/strong\u003e: Insert the USB or DVD into the server where you intend to install Proxmox and boot from it.\u003c/p\u003e","title":"Installing Proxmox 8"},{"content":"In my exploration of managing Docker containers and deployments, one tool stood out due to its user-friendly interface and rich feature set: Portainer. This article walks you through setting up and getting started with Portainer.\nPortainer: Simplifying Docker Management What is Portainer?\nPortainer is an open-source management UI for Docker. It simplifies the process of managing containers, images, networks, and volumes via a web-based dashboard, making it invaluable for those who prefer a GUI over the command line.\nWhy Install Portainer?\nSimplicity: Offers a clear dashboard for container management. Bulk Operations: Execute actions like start, stop, or remove on multiple containers simultaneously. Logs \u0026amp; Stats: Directly view logs and metrics, aiding in troubleshooting. User Management: Secure your Docker environment by managing user access. Setting Up Portainer: Prepare a directory on your host to persist Portainer data. For this example, we\u0026rsquo;ll use /path/on/host: mkdir -p /path/on/host Deploy the Portainer container using a bind mount: docker run -d -p 8000:8000 -p 9443:9443 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v /path/on/host:/data portainer/portainer-ce Access the Portainer UI: Navigate to http://\u0026lt;YOUR-IP-ADDRESS\u0026gt;:9443.\nSet the Administrator Password: On the first login, define a password for the admin account.\nLogin with Admin Credentials: Use the admin username and the password you just set.\nChoose the Docker Environment: For our purposes, select \u0026ldquo;Local\u0026rdquo; to manage the Docker environment on the current machine.\nHaving Portainer in your Docker toolkit streamlines the management process, making tasks easier and more efficient. Dive in and experience the difference!\n","href":"https://blog.svendrive.com/posts/2023-10-01-setting-up-portainer-for-docker-management/","summary":"\u003cp\u003eIn my exploration of managing Docker containers and deployments, one tool stood out due to its user-friendly interface and rich feature set: Portainer. This article walks you through setting up and getting started with Portainer.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch2 id=\"portainer-simplifying-docker-management\"\u003ePortainer: Simplifying Docker Management\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eWhat is Portainer?\u003c/strong\u003e\u003cbr\u003e\nPortainer is an open-source management UI for Docker. It simplifies the process of managing containers, images, networks, and volumes via a web-based dashboard, making it invaluable for those who prefer a GUI over the command line.\u003c/p\u003e","title":"Setting Up Portainer for Docker Management"},{"content":"","href":"https://blog.svendrive.com/search/","summary":"","title":"Search Results"}]